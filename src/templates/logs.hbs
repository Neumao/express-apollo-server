<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary: #007bff;
            --success: #28a745;
            --warning: #ffc107;
            --danger: #dc3545;
            --info: #17a2b8;
            --light: #f8f9fa;
            --dark: #343a40;
            --gray: #6c757d;
            --white: #ffffff;
            --shadow: 0 2px 4px rgba(0,0,0,0.1);
            --shadow-lg: 0 4px 12px rgba(0,0,0,0.15);
            --border-radius: 8px;
            --border-radius-lg: 12px;
            --font-size-sm: 0.85rem;
            --font-size-base: 0.95rem;
            --font-size-lg: 1.1rem;
            --font-size-xl: 1.25rem;
            --font-size-2xl: 1.5rem;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            color: var(--dark);
            line-height: 1.6;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 24px;
        }

        .header {
            background: var(--white);
            padding: 32px;
            border-radius: var(--border-radius-lg);
            box-shadow: var(--shadow);
            margin-bottom: 24px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header h1 {
            font-size: var(--font-size-2xl);
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary), var(--info));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .header .nav-buttons {
            display: flex;
            gap: 12px;
        }

        .nav-btn {
            background: linear-gradient(135deg, var(--primary), var(--info));
            color: var(--white);
            border: none;
            padding: 10px 20px;
            border-radius: var(--border-radius);
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .nav-btn:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
        }

        .filters {
            background: var(--white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--shadow);
            margin-bottom: 24px;
            display: flex;
            gap: 16px;
            align-items: center;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .filter-group label {
            font-weight: 600;
            color: var(--gray);
        }

        .filter-group select {
            padding: 8px 12px;
            border: 1px solid #dee2e6;
            border-radius: 4px;
        }

        .logs-container {
            background: var(--white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--shadow);
            font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
            font-size: 14px;
            line-height: 1.4;
        }

        .log-entry {
            display: flex;
            padding: 8px 0;
            border-bottom: 1px solid #f0f0f0;
            transition: background-color 0.2s;
        }

        .log-entry:hover {
            background-color: #f8f9fa;
        }

        .log-timestamp {
            color: var(--gray);
            min-width: 180px;
            font-size: 12px;
        }

        .log-level {
            min-width: 80px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 12px;
            padding: 2px 6px;
            border-radius: 3px;
            text-align: center;
            margin-right: 12px;
        }

        .log-level.info {
            background-color: #d1ecf1;
            color: #0c5460;
        }

        .log-level.warn {
            background-color: #fff3cd;
            color: #856404;
        }

        .log-level.error {
            background-color: #f8d7da;
            color: #721c24;
        }

        .log-level.debug {
            background-color: #e2e3e5;
            color: #383d41;
        }

        .log-message {
            flex: 1;
            word-wrap: break-word;
        }

        .log-stats {
            background: var(--white);
            border-radius: var(--border-radius-lg);
            padding: 20px;
            box-shadow: var(--shadow);
            margin-bottom: 24px;
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .stat-item {
            text-align: center;
        }

        .stat-number {
            font-size: var(--font-size-xl);
            font-weight: 700;
            color: var(--dark);
            display: block;
        }

        .stat-label {
            color: var(--gray);
            font-size: var(--font-size-sm);
            margin-top: 4px;
        }

        .auto-refresh {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--primary);
            color: var(--white);
            border: none;
            padding: 12px 16px;
            border-radius: 50px;
            cursor: pointer;
            box-shadow: var(--shadow-lg);
            display: flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
        }

        .auto-refresh:hover {
            transform: translateY(-2px);
        }

        .auto-refresh.active {
            background: var(--success);
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1><i class="fas fa-file-alt"></i> {{title}}</h1>
            <div class="nav-buttons">
                <a href="/api/analytics" class="nav-btn">
                    <i class="fas fa-arrow-left"></i> Back to Dashboard
                </a>
                <a href="/api/analytics/api" class="nav-btn">
                    <i class="fas fa-chart-bar"></i> API Analytics
                </a>
            </div>
        </div>

        <div class="filters">
            <div class="filter-group">
                <label for="logType">Log Type:</label>
                <select id="logType" onchange="changeLogType(this.value)">
                    {{#each availableTypes}}
                    <option value="{{this}}" {{#eq this ../logType}}selected{{/eq}}>{{capitalize this}}</option>
                    {{/each}}
                </select>
            </div>
            <div class="filter-group">
                <label for="limit">Entries:</label>
                <select id="limit" onchange="changeLimit(this.value)">
                    <option value="50" {{#eq limit 50}}selected{{/eq}}>50</option>
                    <option value="100" {{#eq limit 100}}selected{{/eq}}>100</option>
                    <option value="200" {{#eq limit 200}}selected{{/eq}}>200</option>
                    <option value="500" {{#eq limit 500}}selected{{/eq}}>500</option>
                </select>
            </div>
        </div>

        <div class="log-stats">
            <div class="stat-item">
                <span class="stat-number">{{logs.length}}</span>
                <span class="stat-label">Log Entries</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{totalCount}}</span>
                <span class="stat-label">Total Available</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{#countBy logs "level" "error"}}{{/countBy}}</span>
                <span class="stat-label">Errors</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{#countBy logs "level" "warn"}}{{/countBy}}</span>
                <span class="stat-label">Warnings</span>
            </div>
        </div>

        <div class="logs-container">
            {{#each logs}}
            <div class="log-entry">
                <div class="log-timestamp">{{formatDate timestamp}}</div>
                <div class="log-level {{level}}">{{level}}</div>
                <div class="log-message">{{message}}</div>
            </div>
            {{/each}}
        </div>
    </div>

    <button class="auto-refresh" id="autoRefresh" onclick="toggleAutoRefresh()">
        <i class="fas fa-sync"></i>
        <span id="refreshText">Enable Auto Refresh</span>
    </button>

    <script>
        let autoRefreshInterval = null;
        const autoRefreshBtn = document.getElementById('autoRefresh');
        const refreshText = document.getElementById('refreshText');

        function changeLogType(logType) {
            const url = new URL(window.location);
            url.searchParams.set('logType', logType);
            window.location.href = url.toString();
        }

        function changeLimit(limit) {
            const url = new URL(window.location);
            url.searchParams.set('limit', limit);
            window.location.href = url.toString();
        }

        function toggleAutoRefresh() {
            if (autoRefreshInterval) {
                clearInterval(autoRefreshInterval);
                autoRefreshInterval = null;
                autoRefreshBtn.classList.remove('active');
                refreshText.textContent = 'Enable Auto Refresh';
            } else {
                autoRefreshInterval = setInterval(() => {
                    location.reload();
                }, 5000); // Refresh every 5 seconds
                autoRefreshBtn.classList.add('active');
                refreshText.textContent = 'Disable Auto Refresh';
            }
        }

        // Handle keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + R to refresh
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                location.reload();
            }
            // Ctrl/Cmd + A to toggle auto refresh
            if ((e.ctrlKey || e.metaKey) && e.key === 'a') {
                e.preventDefault();
                toggleAutoRefresh();
            }
        });
    </script>
</body>
</html>